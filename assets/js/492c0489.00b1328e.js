"use strict";(self.webpackChunkimpacto_docs=self.webpackChunkimpacto_docs||[]).push([[127],{3905:function(e,t,a){a.d(t,{Zo:function(){return k},kt:function(){return y}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),s=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},k=function(e){var t=s(e.components);return n.createElement(d.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,d=e.parentName,k=p(e,["components","mdxType","originalType","parentName"]),u=s(a),y=r,i=u["".concat(d,".").concat(y)]||u[y]||m[y]||l;return a?n.createElement(i,o(o({ref:t},k),{},{components:a})):n.createElement(i,o({ref:t},k))}));function y(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=u;var p={};for(var d in t)hasOwnProperty.call(t,d)&&(p[d]=t[d]);p.originalType=e,p.mdxType="string"==typeof e?e:r,o[1]=p;for(var s=2;s<l;s++)o[s]=a[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},8418:function(e,t,a){a.r(t),a.d(t,{assets:function(){return k},contentTitle:function(){return d},default:function(){return y},frontMatter:function(){return p},metadata:function(){return s},toc:function(){return m}});var n=a(7462),r=a(3366),l=(a(7294),a(3905)),o=["components"],p={},d=void 0,s={unversionedId:"API/Inputs/Keyboard.js",id:"API/Inputs/Keyboard.js",title:"Keyboard.js",description:"Manages the keyboard input.",source:"@site/docs/API/Inputs/Keyboard.js.md",sourceDirName:"API/Inputs",slug:"/API/Inputs/Keyboard.js",permalink:"/Impacto/docs/API/Inputs/Keyboard.js",draft:!1,editUrl:"https://github.com/201flaviosilva/Impacto/docs/API/Inputs/Keyboard.js.md",tags:[],version:"current",lastUpdatedBy:"Fl\xe1vio Silva",lastUpdatedAt:1668350529,formattedLastUpdatedAt:"13/11/2022",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Impacto.js",permalink:"/Impacto/docs/API/Impacto.js"},next:{title:"Mouse.js",permalink:"/Impacto/docs/API/Inputs/Mouse.js"}},k={},m=[{value:"KeyboardManager.getNameByKeyCode(keyCode) \u21d2 <code>string</code>",id:"keyboardmanagergetnamebykeycodekeycode--string",level:2},{value:"KeyboardManager.getKeyCodeByName(name) \u21d2 <code>number</code>",id:"keyboardmanagergetkeycodebynamename--number",level:2},{value:"KeyboardManager.isKeyPressed(key) \u21d2 <code>boolean</code>",id:"keyboardmanageriskeypressedkey--boolean",level:2},{value:"KeyboardManager.isKeyPressedName(name) \u21d2 <code>boolean</code>",id:"keyboardmanageriskeypressednamename--boolean",level:2},{value:"KeyboardManager.isKeyPressedKeyCode(keyCode) \u21d2 <code>boolean</code>",id:"keyboardmanageriskeypressedkeycodekeycode--boolean",level:2}],u={toc:m};function y(e){var t=e.components,a=(0,r.Z)(e,o);return(0,l.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("a",{name:"KeyboardManager"}),(0,l.kt)("h1",{id:"keyboardmanager"},"KeyboardManager"),(0,l.kt)("p",null,"Manages the keyboard input."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Kind"),": global class",(0,l.kt)("br",{parentName:"p"}),"\n",(0,l.kt)("strong",{parentName:"p"},"Constructors"),":   "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#KeyboardManager"},"KeyboardManager"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#KeyboardManager.getNameByKeyCode"},".getNameByKeyCode(keyCode)")," \u21d2 ",(0,l.kt)("code",null,"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#KeyboardManager.getKeyCodeByName"},".getKeyCodeByName(name)")," \u21d2 ",(0,l.kt)("code",null,"number")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#KeyboardManager.isKeyPressed"},".isKeyPressed(key)")," \u21d2 ",(0,l.kt)("code",null,"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#KeyboardManager.isKeyPressedName"},".isKeyPressedName(name)")," \u21d2 ",(0,l.kt)("code",null,"boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#KeyboardManager.isKeyPressedKeyCode"},".isKeyPressedKeyCode(keyCode)")," \u21d2 ",(0,l.kt)("code",null,"boolean"))))),(0,l.kt)("a",{name:"KeyboardManager.getNameByKeyCode"}),(0,l.kt)("h2",{id:"keyboardmanagergetnamebykeycodekeycode--string"},"KeyboardManager.getNameByKeyCode(keyCode) \u21d2 ",(0,l.kt)("code",null,"string")),(0,l.kt)("p",null,"Returns the name of the key by its keyCode."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Kind"),": static method of ",(0,l.kt)("a",{parentName:"p",href:"#KeyboardManager"},(0,l.kt)("code",null,"KeyboardManager")),(0,l.kt)("br",{parentName:"p"}),"\n",(0,l.kt)("strong",{parentName:"p"},"Returns"),": ",(0,l.kt)("code",null,"string")," - ",(0,l.kt)("p",null,"The name of the key."),"  "),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"keyCode"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"number")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("p",null,"The key code of the key."))))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example"),"  "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const { left } = Impacto.Inputs.KeyboardManager.keys;\nconsole.log(Impacto.Inputs.KeyboardManager.getNameByKeyCode(left)); // left\n")),(0,l.kt)("a",{name:"KeyboardManager.getKeyCodeByName"}),(0,l.kt)("h2",{id:"keyboardmanagergetkeycodebynamename--number"},"KeyboardManager.getKeyCodeByName(name) \u21d2 ",(0,l.kt)("code",null,"number")),(0,l.kt)("p",null,"Returns the key code of the key by its name."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Kind"),": static method of ",(0,l.kt)("a",{parentName:"p",href:"#KeyboardManager"},(0,l.kt)("code",null,"KeyboardManager")),(0,l.kt)("br",{parentName:"p"}),"\n",(0,l.kt)("strong",{parentName:"p"},"Returns"),": ",(0,l.kt)("code",null,"number")," - ",(0,l.kt)("p",null,"The key code of the key."),"  "),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"name"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"string")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("p",null,"The name of the key."))))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example"),"  "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'console.log(Impacto.Inputs.KeyboardManager.getKeyCodeByName("left")); // 37\n')),(0,l.kt)("a",{name:"KeyboardManager.isKeyPressed"}),(0,l.kt)("h2",{id:"keyboardmanageriskeypressedkey--boolean"},"KeyboardManager.isKeyPressed(key) \u21d2 ",(0,l.kt)("code",null,"boolean")),(0,l.kt)("p",null,"Returns true if the key is pressed."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Kind"),": static method of ",(0,l.kt)("a",{parentName:"p",href:"#KeyboardManager"},(0,l.kt)("code",null,"KeyboardManager")),(0,l.kt)("br",{parentName:"p"}),"\n",(0,l.kt)("strong",{parentName:"p"},"Returns"),": ",(0,l.kt)("code",null,"boolean")," - ",(0,l.kt)("p",null,"True if the key is pressed."),"  "),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"key"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"number")," ","|"," ",(0,l.kt)("code",null,"string")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("p",null,"The key code or name of the key."))))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example"),"  "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const { left } = Impacto.Inputs.KeyboardManager.keys;\nImpacto.Inputs.KeyboardManager.isKeyPressed(left); // false\n")),(0,l.kt)("a",{name:"KeyboardManager.isKeyPressedName"}),(0,l.kt)("h2",{id:"keyboardmanageriskeypressednamename--boolean"},"KeyboardManager.isKeyPressedName(name) \u21d2 ",(0,l.kt)("code",null,"boolean")),(0,l.kt)("p",null,"Returns true if the key is pressed by its name."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Kind"),": static method of ",(0,l.kt)("a",{parentName:"p",href:"#KeyboardManager"},(0,l.kt)("code",null,"KeyboardManager")),(0,l.kt)("br",{parentName:"p"}),"\n",(0,l.kt)("strong",{parentName:"p"},"Returns"),": ",(0,l.kt)("code",null,"boolean")," - ",(0,l.kt)("p",null,"True if the key is pressed."),"  "),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"name"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"string")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("p",null,"The name of the key."))))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example"),"  "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'Impacto.Inputs.KeyboardManager.isKeyPressedName("left"); // true\n')),(0,l.kt)("a",{name:"KeyboardManager.isKeyPressedKeyCode"}),(0,l.kt)("h2",{id:"keyboardmanageriskeypressedkeycodekeycode--boolean"},"KeyboardManager.isKeyPressedKeyCode(keyCode) \u21d2 ",(0,l.kt)("code",null,"boolean")),(0,l.kt)("p",null,"Returns true if the key is pressed by its key code."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Kind"),": static method of ",(0,l.kt)("a",{parentName:"p",href:"#KeyboardManager"},(0,l.kt)("code",null,"KeyboardManager")),(0,l.kt)("br",{parentName:"p"}),"\n",(0,l.kt)("strong",{parentName:"p"},"Returns"),": ",(0,l.kt)("code",null,"boolean")," - ",(0,l.kt)("p",null,"True if the key is pressed."),"  "),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"keyCode"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"number")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("p",null,"The key code of the key."))))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example"),"  "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"Impacto.Inputs.KeyboardManager.isKeyPressedKeyCode(37); // true\n")))}y.isMDXComponent=!0}}]);